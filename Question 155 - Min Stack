public class MinStack {
    private Stack<int> data;
    private Stack<int[]> min; 

    
    public MinStack() {
        data = new Stack<int>();
        min = new Stack<int[]>();
    }
    
    public void Push(int x) {
        data.Push(x);
        if (min.Count == 0 || min.Peek()[0] > x) {
            min.Push(new int[] { x, 1 });
        } else if (min.Peek()[0] == x) {
            min.Peek()[1]++;
        }
    }
    
    public void Pop() {
        if (data.Count == 0) return;
        int val = data.Pop();
        if (min.Count > 0 && min.Peek()[0] == val) {
            min.Peek()[1]--;
            if (min.Peek()[1] == 0) {
                min.Pop();
            }
        }
    }
    
    public int Top() {
        return data.Peek();
    }
    
    public int GetMin() {
        return min.Peek()[0];
    }
}